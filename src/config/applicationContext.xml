<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd"
	default-lazy-init="true">
	<context:component-scan base-package="com.qykh"></context:component-scan>
	<!-- 加载配置文件 -->
	<context:property-placeholder
		location="classpath:config/jdbc.properties" />
	<!-- 定义数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${jdbc.driverClass}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize">
			<value>${c3p0.minPoolSize}</value>
		</property>
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize">
			<value>${c3p0.maxPoolSize}</value>
		</property>
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize">
			<value>${c3p0.initialPoolSize}</value>
		</property>
		<!--每30秒检查所有连接池中的空闲连接。Default: 0 -->
		<!--<property name="idleConnectionTestPeriod"> <value>${c3p0.idleConnectionTestPeriod}</value> 
			</property> --><!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement">
			<value>${c3p0.acquireIncrement}</value>
		</property>
		<!--最大空闲时间，1800秒内未使用则连接被丢弃，若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime">
			<value>${c3p0.maxIdleTime}</value>
		</property>
	</bean>
	<!-- 创建SessionFactory，这是spring整合hibernate的核心 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="packagesToScan" value="com.qykh.core.domain" />
		<property name="configLocation">
			<value>classpath:config/hibernate.cfg.xml</value>
		</property>
	</bean>

    <!-- 配置事务 -->
    <bean id="trManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 使用注解，在Service层的类上添加@Transcational() -->
    <tx:annotation-driven transaction-manager="trManager"
        proxy-target-class="true" />
    
    
   <!-- 任务调度类 -->
   <bean id="qJob" class="com.qykh.core.quartz.MakerOrder" autowire="byName">
   	    <property name="orderService" ref="maintainorderService" />
   	    <property name="planService" ref="maintainplanService" />
   	    <property name="numService" ref="serialnumService"></property>
    </bean>
   <!-- 任务调用的方法 -->
   <bean name="jobTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
       <property name="targetObject" ref="qJob"/>
       <property name="targetMethod" value="make"/>
       <property name="concurrent" value="false"/>
   </bean>
   <!-- 定义触发 -->
   <bean name="runTask" class="org.springframework.scheduling.quartz.CronTriggerBean">
       <property name="jobDetail" ref="jobTask"/>
       <property name="cronExpression" value="0 01 01 * * ? * "/>
   </bean>
   <!-- 管理类 -->
   <bean name="sf" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
         lazy-init="false" autowire="default">
         <property name="triggers">
             <list>
                <ref bean="runTask"/>
             </list>
         </property>
   </bean>
</beans>